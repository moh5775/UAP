#include <bits/stdc++.h>
using namespace std;

int main() {
    int C = 50;  // Knapsack capacity
    vector<pair<int, int>> items = { {60, 10}, {100, 20}, {120, 30} };  // {profit, weight}

    // Sort items by decreasing profit/weight ratio using lambda
    sort(items.begin(), items.end(), [](auto &a, auto &b) {
        double r1 = (double)a.first / a.second;
        double r2 = (double)b.first / b.second;
        return r1 > r2;
    });

    double finalValue = 0.0;
    int capacity = C;

    for (auto &item : items) {
        int profit = item.first;
        int weight = item.second;

        if (weight <= capacity) {
            capacity -= weight;
            finalValue += profit;
        } else {
            finalValue += profit * ((double)capacity / weight);
            break;
        }
    }

    cout << "Maximum Profit = " << finalValue << endl;

    return 0;
}
